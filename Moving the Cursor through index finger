import cv2
import mediapipe as mp
import pyautogui

# Initialize MediaPipe Hands
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(min_detection_confidence=0.7, min_tracking_confidence=0.7)
mp_draw = mp.solutions.drawing_utils

# Screen dimensions
screen_width, screen_height = pyautogui.size()

# Start video capture
cap = cv2.VideoCapture(0)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Flip the frame horizontally for a mirror effect
    frame = cv2.flip(frame, 1)

    # Convert BGR to RGB
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = hands.process(frame_rgb)

    # Draw landmarks and detect hand movements
    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            mp_draw.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # Extract landmarks for each finger tip
            thumb_tip = hand_landmarks.landmark[4]
            index_tip = hand_landmarks.landmark[8]
            middle_tip = hand_landmarks.landmark[12]
            ring_tip = hand_landmarks.landmark[16]
            pinky_tip = hand_landmarks.landmark[20]

            # Extract landmarks for each finger's lower joint (to detect whether a finger is bent)
            index_base = hand_landmarks.landmark[6]
            middle_base = hand_landmarks.landmark[10]
            ring_base = hand_landmarks.landmark[14]
            pinky_base = hand_landmarks.landmark[18]

            # Detect if only the index finger is raised
            def is_finger_raised(tip, base):
                return tip.y < base.y  # Y decreases as we go up in the frame

            is_index_raised = is_finger_raised(index_tip, index_base)
            is_middle_raised = is_finger_raised(middle_tip, middle_base)
            is_ring_raised = is_finger_raised(ring_tip, ring_base)
            is_pinky_raised = is_finger_raised(pinky_tip, pinky_base)
            is_thumb_raised = thumb_tip.x < hand_landmarks.landmark[3].x  # Thumb position check (relative to hand)

            # Only move the mouse if the index finger is raised and others are not
            if is_index_raised and not (is_middle_raised or is_ring_raised or is_pinky_raised or is_thumb_raised):
                # Convert normalized coordinates to screen coordinates
                frame_width, frame_height = frame.shape[1], frame.shape[0]
                cursor_x = int(index_tip.x * screen_width)
                cursor_y = int(index_tip.y * screen_height)

                # Move the mouse cursor
                pyautogui.moveTo(cursor_x, cursor_y)

                # Display feedback on the video feed
                cv2.putText(frame, "Index Finger Raised - Mouse Active", (10, 50),
                            cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)
            else:
                cv2.putText(frame, "Hand Gesture Not Recognized", (10, 50),
                            cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)

    # Display the frame
    cv2.imshow("Mouse Control with Raised Index Finger", frame)

    # Press 'q' to exit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
