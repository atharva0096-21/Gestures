import cv2
import mediapipe as mp
import pyautogui

# Initialize MediaPipe Hands
mp_hands = mp.solutions.hands
hands = mp_hands.Hands(min_detection_confidence=0.7, min_tracking_confidence=0.7)
mp_draw = mp.solutions.drawing_utils

# Start video capture
cap = cv2.VideoCapture(0)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Flip the frame horizontally for a mirror effect
    frame = cv2.flip(frame, 1)

    # Convert BGR to RGB
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = hands.process(frame_rgb)

    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            mp_draw.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # Extract landmarks for all fingers
            finger_tips = [
                hand_landmarks.landmark[8],  # Index tip
                hand_landmarks.landmark[12], # Middle tip
                hand_landmarks.landmark[16], # Ring tip
                hand_landmarks.landmark[20], # Pinky tip
                hand_landmarks.landmark[4],  # Thumb tip
            ]

            # Get positions of all finger tips
            frame_width, frame_height = frame.shape[1], frame.shape[0]
            finger_y_positions = [int(tip.y * frame_height) for tip in finger_tips]
            finger_x_positions = [int(tip.x * frame_width) for tip in finger_tips]

            # Check if the hand is open (all fingers spread apart)
            palm_height = max(finger_y_positions) - min(finger_y_positions)
            palm_width = max(finger_x_positions) - min(finger_x_positions)

            if palm_height > 100 and palm_width > 100:  # Ensure it's an open palm
                # Detect vertical scrolling
                if max(finger_y_positions) > frame_height * 0.75:  # Swiping down
                    pyautogui.scroll(-20)  # Scroll down
                    cv2.putText(frame, "Scrolling Down", (10, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)
                elif min(finger_y_positions) < frame_height * 0.25:  # Swiping up
                    pyautogui.scroll(20)  # Scroll up
                    cv2.putText(frame, "Scrolling Up", (10, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

                # Detect horizontal scrolling
                if max(finger_x_positions) > frame_width * 0.75:  # Swiping right
                    pyautogui.hscroll(20)  # Scroll right
                    cv2.putText(frame, "Scrolling Right", (10, 100), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 0), 2)
                elif min(finger_x_positions) < frame_width * 0.25:  # Swiping left
                    pyautogui.hscroll(-20)  # Scroll left
                    cv2.putText(frame, "Scrolling Left", (10, 100), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 255, 0), 2)

    # Display the frame
    cv2.imshow("5-Finger Scrolling Gestures", frame)

    # Press 'q' to exit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
